services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aftermeet-db
    environment:
      POSTGRES_DB: aftermeet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5433:5432"  # Using different external port
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aftermeet-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aftermeet.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped

  # NestJS API
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: aftermeet-api
    env_file:
      - .env.docker
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    restart: unless-stopped

  # Next.js Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: aftermeet-web
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: aftermeet-queue
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  # Redis (optional - for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: aftermeet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
